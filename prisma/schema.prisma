// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Branch {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(255) @unique
  gitBranch String?  @db.VarChar(255)
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
  configs   Config[]
}

model Config {
  id          String  @id @default(uuid())
  status      Int
  project     Project @relation(fields: [projectId], references: [id])
  projectId   String
  branch      Branch  @relation(fields: [branchId], references: [id])
  branchId    String
  userId      Int     @unique
  notes       String  @db.VarChar(1024)
  gitHash     String  @db.VarChar(255)
  downloadUrl String  @db.VarChar(1024)
  checksumMd5 String  @db.VarChar(255)
}

model Project {
  id       String   @id @default(uuid())
  name     String   @unique
  configs  Config[]
  branches Branch[]
  gitRepo  String?  @db.VarChar(1024)
  bucket   String?  @db.VarChar(1024)
}

model Environment {
  id                   String  @id @default(uuid())
  name                 String?
  configId             String
  claimedByUserId      String?
  claimedByUser        User?   @relation(fields: [claimedByUserId], references: [id])
  globalTimeTravel     Int
  notificationUrl      String  @db.VarChar(1024)
  uploadLocation       String  @db.VarChar(1024)
  downloadUrl          String  @db.VarChar(1024)
  clientDownloadBucket String  @db.VarChar(1024)
  clientDownloadKey    String  @db.VarChar(1024)
  awsAccessKey         String  @db.VarChar(1024)
  awsSecretKey         String  @db.VarChar(1024)
}

model User {
  id           String        @id @default(uuid())
  name         String?
  password     String?
  firstName    String?
  environments Environment[]
}
